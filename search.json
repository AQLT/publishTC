[{"path":"https://aqlt.github.io/publishTC/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alain Quartier-la-Tente. Author, maintainer.","code":""},{"path":"https://aqlt.github.io/publishTC/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Quartier-la-Tente (2025). publishTC: Tools help publish trend-cycle. R package version 0.2.2, https://github.com/AQLT/publishTC.","code":"@Manual{,   title = {publishTC: Tools to help publish the trend-cycle},   author = {Alain Quartier-la-Tente},   year = {2025},   note = {R package version 0.2.2},   url = {https://github.com/AQLT/publishTC}, }"},{"path":"https://aqlt.github.io/publishTC/index.html","id":"publishtc","dir":"","previous_headings":"","what":"Tools to help publish the trend-cycle","title":"Tools to help publish the trend-cycle","text":"publish trend-cycle? goal publishTC facilitate computation trend-cycle component: Using Cascade Linear Filter (CLF) surrogate cut--normalise asymmetric filters, done Statistique Canada; Using classical Henderson symmetric filter surrogate Musgrave asymmetric filters, done Australian Bureau Statistics (Trewin 2003); Using local Parametrization Musgrave asymmetric filters, described Quartier-la-Tente (2024); Extending Henderson symmetric fiter surrogate Musgrave asymmetric filters take account additive outliers level shifts, described Quartier-la-Tente (2025).","code":""},{"path":"https://aqlt.github.io/publishTC/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools to help publish the trend-cycle","text":"install publishTC:","code":"install.packages('publishTC', repos = c('https://aqlt.r-universe.dev', 'https://cloud.r-project.org'))"},{"path":"https://aqlt.github.io/publishTC/index.html","id":"bibliography","dir":"","previous_headings":"","what":"Bibliography","title":"Tools to help publish the trend-cycle","text":"Dagum, E. B., & Luati, . (2008). Cascade Linear Filter Reduce Revisions False Turning Points Real Time Trend-Cycle Estimation. Econometric Reviews 28 (1-3): 40‑59. https://doi.org/10.1080/07474930802387837 Henderson, R. (1916). Note graduation adjusted average. Transactions actuarial society America 17: 43‑48. Musgrave, J. (1964). set end weights end end weights. US Census Bureau [custodian]. Trewin, D. (2003). guide interpreting time series - Monitoring trends. Australian Bureau Statistics Information Paper. https://www.abs.gov.au/AUSSTATS/abs@.nsf/Lookup/1349.0Main+Features12003?OpenDocument. Quartier-la-Tente, . (2024). Improving Real-Time Trend Estimates Using Local Parametrization Polynomial Regression Filters. Journal Official Statistics, 40(4), 685-715. https://doi.org/10.1177/0282423X241283207. Quartier-la-Tente, . (2025). Estimation de la tendance-cycle avec des méthodes robustes aux points atypiques. https://github.com/AQLT/robustMA.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/bandwidth.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Bandwidth — bandwidth","title":"Get Bandwidth — bandwidth","text":"Get bandwidth \"tc_estimates\" object. length filter equal \\(2 \\times \\text{bandwidth}(x) + 1\\).","code":""},{"path":"https://aqlt.github.io/publishTC/reference/bandwidth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Bandwidth — bandwidth","text":"","code":"bandwidth(x)"},{"path":"https://aqlt.github.io/publishTC/reference/bandwidth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Bandwidth — bandwidth","text":"x \"tc_estimates\" object.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/classical-ma.html","id":null,"dir":"Reference","previous_headings":"","what":"Classical Moving Average — classical-ma","title":"Classical Moving Average — classical-ma","text":"Classical moving average trend-cycle extraction.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/classical-ma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classical Moving Average — classical-ma","text":"","code":"henderson  CLF  CLF_CN  local_param_est"},{"path":"https://aqlt.github.io/publishTC/reference/classical-ma.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Classical Moving Average — classical-ma","text":"henderson list() \"moving_average\". CLF \"finite_filters\". CLF_CN \"finite_filters\". local_param_est list() \"finite_filters\".","code":""},{"path":"https://aqlt.github.io/publishTC/reference/classical-ma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classical Moving Average — classical-ma","text":"henderson contains Henderson moving average length 5, 7, 9, 13 23. CLF contains Cascade Linear Filter (CLF) length 13 associated Asymmetric Linear Filters (ALF). CLF_CN contains Cascade Linear Filter (CLF) length 13 associated cut normalise asymetric filters.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/classical-ma.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Classical Moving Average — classical-ma","text":"Dagum, E. B., & Luati, . (2008). Cascade Linear Filter Reduce Revisions False Turning Points Real Time Trend-Cycle Estimation. Econometric Reviews 28 (1-3): 40‑59. https://doi.org/10.1080/07474930802387837. Henderson, R. (1916). Note graduation adjusted average. Transactions actuarial society America 17: 43‑48. Quartier-la-Tente, . (2024). Improving Real-Time Trend Estimates Using Local Parametrization Polynomial Regression Filters. Journal Official Statistics, 40(4), 685-715. https://doi.org/10.1177/0282423X241283207.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/clf_smoothing.html","id":null,"dir":"Reference","previous_headings":"","what":"Smoothing using the Cascade Linear Filter — clf_smoothing","title":"Smoothing using the Cascade Linear Filter — clf_smoothing","text":"Smoothing using Cascade Linear Filter","code":""},{"path":"https://aqlt.github.io/publishTC/reference/clf_smoothing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smoothing using the Cascade Linear Filter — clf_smoothing","text":"","code":"clf_smoothing(x, endpoints = c(\"cut-and-normalize\", \"ALF\"), ...)"},{"path":"https://aqlt.github.io/publishTC/reference/clf_smoothing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smoothing using the Cascade Linear Filter — clf_smoothing","text":"x input time-series. endpoints Method used asymmetric filter. endpoints = \"cut--normalize\" (default) cut--normalise method used, otherwise Asymmetric Linear Filter (ALF) filters used. ... unused parameters.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/clf_smoothing.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Smoothing using the Cascade Linear Filter — clf_smoothing","text":"Dagum, E. B., & Luati, . (2008). Cascade Linear Filter Reduce Revisions False Turning Points Real Time Trend-Cycle Estimation. Econometric Reviews 28 (1-3): 40‑59. https://doi.org/10.1080/07474930802387837","code":""},{"path":"https://aqlt.github.io/publishTC/reference/confint-tc.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Intervals for ","title":"Confidence Intervals for ","text":"Confidence Intervals \"tc_estimates\"","code":""},{"path":"https://aqlt.github.io/publishTC/reference/confint-tc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Intervals for ","text":"","code":"# S3 method for class 'henderson' confint(object, parm, level = 0.95, asymmetric_var = TRUE, ...)  # S3 method for class 'clf' confint(object, parm, level = 0.95, asymmetric_var = TRUE, ...)  # S3 method for class 'robust_henderson' confint(object, parm, level = 0.95, asymmetric_var = TRUE, ...)"},{"path":"https://aqlt.github.io/publishTC/reference/confint-tc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Intervals for ","text":"object \"tc_estimates\" object. parm unused parameter. level confidence level required. asymmetric_var asymmetric_var = TRUE variance estimated asymmetric filters instead using variance associated symmetric estimates. ... (unused) parameters.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/confint_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Intervals plot — confint_plot","title":"Confidence Intervals plot — confint_plot","text":"Confidence Intervals plot","code":""},{"path":"https://aqlt.github.io/publishTC/reference/confint_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Intervals plot — confint_plot","text":"","code":"confint_plot(   object,   xlim = NULL,   ylim = NULL,   col_tc = \"#E69F00\",   col_sa = \"black\",   col_confint = \"grey\",   xlab = \"\",   ylab = \"\",   level = 0.95,   ... )  ggconfint_plot(   object,   xlim = NULL,   ylim = NULL,   col_tc = \"#E69F00\",   col_sa = \"black\",   col_confint = \"grey\",   legend_tc = \"Trend-cycle\",   legend_sa = \"Seasonally adjusted\",   legend_confint = \"Confidence interval\",   level = 0.95,   ... )"},{"path":"https://aqlt.github.io/publishTC/reference/confint_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Intervals plot — confint_plot","text":"object \"tc_estimates\". confidence intervals computed using confint() function. xlim, ylim x y limits plot. xlim defined ylim, ylim determined automatically. col_sa, col_tc color seasonally adjusted trend-cycle components. col_confint color confidence interval. xlab, ylab x y axis labels. level confidence level required. ... parameters. legend_tc, legend_sa, legend_confint legend trend-cycle seasonally adjusted components confidence intervals.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/confint_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Intervals plot — confint_plot","text":"","code":"tc_mod <- henderson_smoothing(french_ipi[, \"manufacturing\"]) confint_plot(tc_mod, xlim = c(2022, 2024.5))"},{"path":"https://aqlt.github.io/publishTC/reference/ggsmoothing_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce several plots — ggsmoothing_plot","title":"Produce several plots — ggsmoothing_plot","text":"Produce several plots","code":""},{"path":"https://aqlt.github.io/publishTC/reference/ggsmoothing_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce several plots — ggsmoothing_plot","text":"","code":"ggsmoothing_plot(   object,   plots = c(\"normal\", \"confint\", \"lollypop\", \"implicit_forecasts\"),   level = 0.95,   ... )"},{"path":"https://aqlt.github.io/publishTC/reference/ggsmoothing_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce several plots — ggsmoothing_plot","text":"object \"tc_estimates\". confidence intervals computed using confint() function. plots list plots use. level confidence level required. ... unused parameters.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/growthplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Growth plots — growthplot","title":"Growth plots — growthplot","text":"Plots growth rate trend-cycle (solid lines) seasonally adjusted series (bar-line).","code":""},{"path":"https://aqlt.github.io/publishTC/reference/growthplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Growth plots — growthplot","text":"","code":"growthplot(   object,   pct = TRUE,   xlim = NULL,   ylim = NULL,   col_tc = \"#E69F00\",   col_sa = \"black\",   xlab = \"\",   ylab = \"\",   sa_bar_line = TRUE,   ...,   lag = -1 )  gggrowthplot(   object,   pct = TRUE,   xlim = NULL,   ylim = NULL,   sa_bar_line = TRUE,   col_tc = \"#E69F00\",   col_sa = \"black\",   col_sa_fill = \"grey\",   legend_tc = \"Trend-cycle\",   legend_sa = \"Seasonally adjusted\",   ...,   lag = -1 )"},{"path":"https://aqlt.github.io/publishTC/reference/growthplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Growth plots — growthplot","text":"object \"tc_estimates\" object. pct logical. TRUE (default), growth rate expressed percentage points. xlim, ylim x y limits plot. xlim defined ylim, ylim determined automatically. col_sa, col_tc color seasonally adjusted trend-cycle components. xlab, ylab x y axis labels. sa_bar_line logical. TRUE (default), growth rates seasonally adjusted series presented bar-lines, otherwise presented lines. ... (unused) parameters. lag lag used growth rate. default, lag = -1 (.e. period--period growth rate). col_sa_fill fill color bar seasonally adjusted series. legend_tc, legend_sa legend trend-cycle seasonally adjusted components.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/growthplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Growth plots — growthplot","text":"","code":"tc_mod <- henderson_smoothing(french_ipi[, \"manufacturing\"]) growthplot(tc_mod, xlim = c(2022, 2024.5))"},{"path":"https://aqlt.github.io/publishTC/reference/henderson_robust_smoothing.html","id":null,"dir":"Reference","previous_headings":"","what":"Smoothing using the Henderson filter — henderson_robust_smoothing","title":"Smoothing using the Henderson filter — henderson_robust_smoothing","text":"Smoothing using Henderson filter","code":""},{"path":"https://aqlt.github.io/publishTC/reference/henderson_robust_smoothing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smoothing using the Henderson filter — henderson_robust_smoothing","text":"","code":"henderson_robust_smoothing(   x,   endpoints = c(\"Musgrave\", \"QL\", \"CQ\", \"DAF\"),   length = NULL,   ao = NULL,   ao_tc = NULL,   ls = NULL,   icr = NULL,   local_icr = FALSE,   asymmetric_var = FALSE,   degree = 3,   ... )"},{"path":"https://aqlt.github.io/publishTC/reference/henderson_robust_smoothing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smoothing using the Henderson filter — henderson_robust_smoothing","text":"x input time-series. endpoints Method used asymmetric filter. default Musgrave method used length length ao Dates Additive Outliers (AO) effects associated irregular component. ao_tc Dates Additive Outliers (AO) effects associated trend-cycle component. ls Dates Level Shifts (LS) effects associated trend-cycle component. icr /C ratio used asymmetric filter. local_icr TRUE, /C ratio estimated locally (described Quartier-la-Tente, . (2024)) instead globally. asymmetric_var local_icr = TRUE,  asymmetric_var = TRUE variance estimated asymmetric filters instead using variance associated symmetric estimates. degree local_icr = TRUE, degree polynomial used estimate local bias parameter. ... parameters passed rjd3filters::lp_filter().","code":""},{"path":"https://aqlt.github.io/publishTC/reference/henderson_smoothing.html","id":null,"dir":"Reference","previous_headings":"","what":"Smoothing using the Henderson filter — henderson_smoothing","title":"Smoothing using the Henderson filter — henderson_smoothing","text":"Smoothing using Henderson filter","code":""},{"path":"https://aqlt.github.io/publishTC/reference/henderson_smoothing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smoothing using the Henderson filter — henderson_smoothing","text":"","code":"henderson_smoothing(   x,   endpoints = c(\"Musgrave\", \"QL\", \"CQ\", \"CC\", \"DAF\", \"CN\"),   length = NULL,   icr = NULL,   local_icr = FALSE,   asymmetric_var = FALSE,   degree = 3,   ... )"},{"path":"https://aqlt.github.io/publishTC/reference/henderson_smoothing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smoothing using the Henderson filter — henderson_smoothing","text":"x input time-series. endpoints Method used asymmetric filter. default Musgrave method used length length icr /C ratio used asymmetric filter. local_icr TRUE, /C ratio estimated locally (described Quartier-la-Tente, . (2024)) instead globally. asymmetric_var local_icr = TRUE,  asymmetric_var = TRUE variance estimated asymmetric filters instead using variance associated symmetric estimates. degree local_icr = TRUE, degree polynomial used estimate local bias parameter. ... parameters passed rjd3filters::lp_filter().","code":""},{"path":"https://aqlt.github.io/publishTC/reference/henderson_smoothing.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Smoothing using the Henderson filter — henderson_smoothing","text":"Quartier-la-Tente, . (2024). Improving Real-Time Trend Estimates Using Local Parametrization Polynomial Regression Filters. Journal Official Statistics, 40(4), 685-715. https://doi.org/10.1177/0282423X241283207.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/icr.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute IC-Ratio — icr","title":"Compute IC-Ratio — icr","text":"icr() compute overall /C ratio, icrs() compute /C ratios period.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/icr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute IC-Ratio — icr","text":"","code":"icr(x, tc, mul = FALSE)  icrs(x, tc, mul = FALSE)"},{"path":"https://aqlt.github.io/publishTC/reference/icr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute IC-Ratio — icr","text":"x, tc seasonally adjusted trend-cycle components. x \"tc_estimates\" object tc ignored. mul boolean indicating decomposition multiplicative additive.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/icr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute IC-Ratio — icr","text":"","code":"x <- cars_registrations tc <- henderson_smoothing(x)"},{"path":"https://aqlt.github.io/publishTC/reference/implicit_forecasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Implicit Forecasts — implicit_forecasts","title":"Compute Implicit Forecasts — implicit_forecasts","text":"Compute Implicit Forecasts","code":""},{"path":"https://aqlt.github.io/publishTC/reference/implicit_forecasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Implicit Forecasts — implicit_forecasts","text":"","code":"implicit_forecasts(x, ...)"},{"path":"https://aqlt.github.io/publishTC/reference/implicit_forecasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Implicit Forecasts — implicit_forecasts","text":"x \"tc_estimates\" object otherwise uses rjd3filters::implicit_forecast() function. ... unused parameters.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/implicit_forecasts_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Implicit Forecasts plot — implicit_forecasts_plot","title":"Implicit Forecasts plot — implicit_forecasts_plot","text":"Implicit Forecasts plot","code":""},{"path":"https://aqlt.github.io/publishTC/reference/implicit_forecasts_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implicit Forecasts plot — implicit_forecasts_plot","text":"","code":"implicit_forecasts_plot(   object,   xlim = NULL,   ylim = NULL,   col_tc = \"#E69F00\",   col_sa = \"black\",   col_i_f = col_sa,   xlab = \"\",   ylab = \"\",   lty_last_tc = 2,   lty_i_f = 3,   n_last_tc = 4,   ... )  ggimplicit_forecasts_plot(   object,   xlim = NULL,   ylim = NULL,   col_tc = \"#E69F00\",   col_sa = \"black\",   col_i_f = col_sa,   lty_last_tc = 2,   lty_i_f = 3,   n_last_tc = 4,   legend_tc = \"Trend-cycle\",   legend_sa = \"Seasonally adjusted\",   legend_i_f = \"Implicit forecasts\",   ... )"},{"path":"https://aqlt.github.io/publishTC/reference/implicit_forecasts_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implicit Forecasts plot — implicit_forecasts_plot","text":"object \"tc_estimates\" object. xlim, ylim x y limits plot. xlim defined ylim, ylim determined automatically. col_sa, col_tc color seasonally adjusted trend-cycle components. col_i_f color implicit forecasts. xlab, ylab x y axis labels. lty_last_tc, lty_i_f line type last values trend-cycle component implicit forecasts. n_last_tc number last values trend-cycle component plotted different line type (emphasize higher variability last estimates). NULL, n_last_tc equal MCD statistic. ... parameters. legend_tc, legend_sa, legend_i_f legend trend-cycle seasonally adjusted components implicit forecasts.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/implicit_forecasts_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Implicit Forecasts plot — implicit_forecasts_plot","text":"","code":"tc_mod <- henderson_smoothing(french_ipi[, \"manufacturing\"]) implicit_forecasts_plot(tc_mod, xlim = c(2022, 2025))"},{"path":"https://aqlt.github.io/publishTC/reference/lollypop.html","id":null,"dir":"Reference","previous_headings":"","what":"Lollypop plot — lollypop","title":"Lollypop plot — lollypop","text":"Lollypop plot","code":""},{"path":"https://aqlt.github.io/publishTC/reference/lollypop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lollypop plot — lollypop","text":"","code":"lollypop(   object,   xlim = NULL,   ylim = NULL,   col_tc = \"#E69F00\",   col_sa = \"black\",   color_points = col_sa,   cex_points = 1,   pch_points = 16,   xlab = \"\",   ylab = \"\",   lty_last_tc = 2,   n_last_tc = 4,   ... )  gglollypop(   object,   xlim = NULL,   ylim = NULL,   col_tc = \"#E69F00\",   col_sa = \"black\",   color_points = col_sa,   cex_points = 1,   pch_points = 16,   legend_tc = \"Trend-cycle\",   legend_sa = \"Seasonally adjusted\",   lty_last_tc = 2,   n_last_tc = 4,   ... )"},{"path":"https://aqlt.github.io/publishTC/reference/lollypop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lollypop plot — lollypop","text":"object \"tc_estimates\" object. xlim, ylim x y limits plot. xlim defined ylim, ylim determined automatically. col_sa, col_tc color seasonally adjusted trend-cycle components. color_points, cex_points color size points associated seasonnaly adjusted component. pch_points point type seasonally adjusted component. xlab, ylab x y axis labels. lty_last_tc line type last values trend-cycle component. n_last_tc number last values trend-cycle component plotted different line type (emphasize higher variability last estimates). NULL, n_last_tc equal MCD statistic. ... parameters. legend_tc, legend_sa legend trend-cycle seasonally adjusted components.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/lollypop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lollypop plot — lollypop","text":"","code":"tc_mod <- henderson_smoothing(french_ipi[, \"manufacturing\"]) lollypop(tc_mod, xlim = c(2022, 2024.5))"},{"path":"https://aqlt.github.io/publishTC/reference/mcd.html","id":null,"dir":"Reference","previous_headings":"","what":"Month of Cyclical Dominance — mcd","title":"Month of Cyclical Dominance — mcd","text":"Month Cyclical Dominance","code":""},{"path":"https://aqlt.github.io/publishTC/reference/mcd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Month of Cyclical Dominance — mcd","text":"","code":"mcd(x, tc, mul = FALSE)"},{"path":"https://aqlt.github.io/publishTC/reference/mcd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Month of Cyclical Dominance — mcd","text":"x, tc seasonally adjusted trend-cycle components. x \"tc_estimates\" object tc ignored. mul boolean indicating decomposition multiplicative additive.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/plot.tc_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Default ","title":"Default ","text":"Default \"tc_estimates\" plot","code":""},{"path":"https://aqlt.github.io/publishTC/reference/plot.tc_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default ","text":"","code":"# S3 method for class 'tc_estimates' plot(   x,   y = NULL,   xlim = NULL,   ylim = NULL,   col_tc = \"#E69F00\",   col_sa = \"black\",   xlab = \"\",   ylab = \"\",   lty_last_tc = 2,   n_last_tc = 4,   ... )  # S3 method for class 'tc_estimates' autoplot(   object,   xlim = NULL,   ylim = NULL,   col_tc = \"#E69F00\",   col_sa = \"black\",   legend_tc = \"Trend-cycle\",   legend_sa = \"Seasonally adjusted\",   lty_last_tc = 2,   n_last_tc = 4,   ... )"},{"path":"https://aqlt.github.io/publishTC/reference/plot.tc_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default ","text":"y unused parameter. xlim, ylim x y limits plot. xlim defined ylim, ylim determined automatically. col_sa, col_tc color seasonally adjusted trend-cycle components. xlab, ylab x y axis labels. lty_last_tc line type last values trend-cycle component. n_last_tc number last values trend-cycle component plotted different line type (emphasize higher variability last estimates). NULL, n_last_tc equal MCD statistic. ... (unused) parameters. object, x \"tc_estimates\" object. legend_tc, legend_sa legend trend-cycle seasonally adjusted components.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/plot.tc_estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default ","text":"","code":"tc_mod <- henderson_smoothing(french_ipi[, \"manufacturing\"]) plot(tc_mod, xlim = c(2022, 2024.5))"},{"path":"https://aqlt.github.io/publishTC/reference/smoothing.html","id":null,"dir":"Reference","previous_headings":"","what":"Smoothing using several methods — smoothing","title":"Smoothing using several methods — smoothing","text":"Smoothing using several methods","code":""},{"path":"https://aqlt.github.io/publishTC/reference/smoothing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smoothing using several methods — smoothing","text":"","code":"smoothing(   x,   methods = c(\"henderson\", \"henderson_localic\", \"henderson_robust\",     \"henderson_robust_localic\", \"clf_cn\", \"clf_alf\"),   endpoints = \"Musgrave\",   length = NULL,   icr = NULL,   asymmetric_var = FALSE,   degree = 3,   ao = NULL,   ao_tc = NULL,   ls = NULL,   ... )"},{"path":"https://aqlt.github.io/publishTC/reference/smoothing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smoothing using several methods — smoothing","text":"x input time-series. methods list methods use. endpoints Method used asymmetric filter. default Musgrave method used length length icr /C ratio used asymmetric filter. asymmetric_var local_icr = TRUE,  asymmetric_var = TRUE variance estimated asymmetric filters instead using variance associated symmetric estimates. degree local_icr = TRUE, degree polynomial used estimate local bias parameter. ao Dates Additive Outliers (AO) effects associated irregular component. ao_tc Dates Additive Outliers (AO) effects associated trend-cycle component. ls Dates Level Shifts (LS) effects associated trend-cycle component. ... unused parameters.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/smoothness.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Smoothness of Trend-Cycle estimates — smoothness","title":"Get Smoothness of Trend-Cycle estimates — smoothness","text":"Compute smoothness trend-cycle estimates using Picard Matthews (2006) definition.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/smoothness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Smoothness of Trend-Cycle estimates — smoothness","text":"","code":"smoothness(x)"},{"path":"https://aqlt.github.io/publishTC/reference/smoothness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Smoothness of Trend-Cycle estimates — smoothness","text":"x \"tc_estimates\" object.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/smoothness.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Smoothness of Trend-Cycle estimates — smoothness","text":"several definitions criteria smoothness. measure smoothness used defined : $$ 100 \\times \\sqrt{ \\frac{ \\sum_t [(TC_t - TC_{t-1})/TC_{t-1}]^2 }{ \\sum_t [(SA_t - SA_{t-1})/SA_{t-1}]^2 } } $$ represents measure month--month percentage change trend-cycle. smaller smoothness number , smoother trend-cycle.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/smoothness.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Smoothness of Trend-Cycle estimates — smoothness","text":"Picard, Frédéric et Steve Matthews (2016). Addition Trend-Cycle Estimates Selected Publications Statistics Canada. Proceedings Survey Methods Section, Statistical Society Canada (SSC) Annual Meeting. <https://ssc.ca/sites/default/files/imce/pdf/p icard_ssc2016.pdf>.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/ts-exemple.html","id":null,"dir":"Reference","previous_headings":"","what":"Data set examples — ts-exemple","title":"Data set examples — ts-exemple","text":"data sets examples used paper Quartier-la-Tente (2025).","code":""},{"path":"https://aqlt.github.io/publishTC/reference/ts-exemple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data set examples — ts-exemple","text":"","code":"cars_registrations  french_ipi  fred  simulated_data  etip"},{"path":"https://aqlt.github.io/publishTC/reference/ts-exemple.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data set examples — ts-exemple","text":"object class ts length 177. object class mts (inherits ts, matrix, array) 416 rows 3 columns. object class mts (inherits ts, matrix, array) 766 rows 2 columns. object class mts (inherits ts, matrix, array) 84 rows 6 columns. object class ts length 590.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/ts-exemple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data set examples — ts-exemple","text":"cars_registrations: monthly new passenger cars registrations France, published October 2024. french_ipi: monthly industrial production index France Crude Petroleum, Motor Vehicles Manufacturing published October 2024. fred: series CE16OV (Civilian Employment Level) RETAILx (Retail Food Services Sales) FRED-MD database published November 2022. simulated_data: simulated trends degree 0, 1 2 Additive Outlier (AO) Level Shift (LS) January 2022 etip corresponds Expected trend production (balance opinion) French Manufacturing industry, published May 2025 monthly business survey goods-producing industries INSEE.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/ts-exemple.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data set examples — ts-exemple","text":"Quartier-la-Tente, . (2025). Estimation de la tendance-cycle avec des méthodes robustes aux points atypiques. https://github.com/AQLT/robustMA. McCracken, Michael W., et Serena Ng. 2016. FRED-MD: Monthly Database Macroeconomic Research. Journal Business & Economic Statistics 34 (4): 574‑89. https://doi.org/10.1080/07350015.2015.1086655.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/turning_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect turning points in a time series — turning_points","title":"Detect turning points in a time series — turning_points","text":"turning_points() returns number downturns (downturn()) upturns (upturn()) time series. unwanted_ripples() returns number unwanted ripples time series.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/turning_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect turning points in a time series — turning_points","text":"","code":"turning_points(x, start = NULL, end = NULL, digits = 6, k = 3, m = 1)  upturn(x, start = NULL, end = NULL, digits = 6, k = 3, m = 1)  downturn(x, start = NULL, end = NULL, digits = 6, k = 3, m = 1)  unwanted_ripples(x, start = NULL, end = NULL, digits = 6, k = 3, m = 1)"},{"path":"https://aqlt.github.io/publishTC/reference/turning_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect turning points in a time series — turning_points","text":"x input time series. start, end interval find turning points. digits number digits used comparison values. k, m number observation turning point (see details).","code":""},{"path":"https://aqlt.github.io/publishTC/reference/turning_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect turning points in a time series — turning_points","text":"Zellner, Hong, et Min (1991) definition used \\(k=3\\), \\(m=1\\): upturn date \\(t\\) $$ y_{t-k}\\geq\\cdots\\geq y_{t-1}<y_t\\leq y_{t+1}\\leq\\cdots y_{t+m} $$ downturn date \\(t\\) $$ y_{t-k}\\leq\\cdots\\leq y_{t-1}>y_t\\geq y_{t+1}\\geq\\cdots y_{t+m} $$ unwanted ripple defined whenever two downturns upturns occur within 10 month period (.e.: small cycles less 11 months).","code":""},{"path":"https://aqlt.github.io/publishTC/reference/write.ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Export and Import time series object to/from CSV — write.ts","title":"Export and Import time series object to/from CSV — write.ts","text":"Export Import time series object /CSV","code":""},{"path":"https://aqlt.github.io/publishTC/reference/write.ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export and Import time series object to/from CSV — write.ts","text":"","code":"write.ts(x, file)  read.ts(file, frequency = NULL, list = FALSE)"},{"path":"https://aqlt.github.io/publishTC/reference/write.ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export and Import time series object to/from CSV — write.ts","text":"x time series object file character string giving name file write . frequency integer giving number observations per unit time. default guessed data. list boolean, TRUE, function returns list time series objects.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/x11_trend_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"X-11 Selection of Trend-Cycle Filter — x11_trend_selection","title":"X-11 Selection of Trend-Cycle Filter — x11_trend_selection","text":"Perform X-11 selection length Henderson (x11_trend_selection()) compute associated /C ratio used build Musgrave fuilters (find_icr()).","code":""},{"path":"https://aqlt.github.io/publishTC/reference/x11_trend_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"X-11 Selection of Trend-Cycle Filter — x11_trend_selection","text":"","code":"x11_trend_selection(x)  find_icr(length, freq = 12)"},{"path":"https://aqlt.github.io/publishTC/reference/x11_trend_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"X-11 Selection of Trend-Cycle Filter — x11_trend_selection","text":"x \"ts\" object. length length filter. freq frequency time series used compute /C ratio.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/x11_trend_selection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"X-11 Selection of Trend-Cycle Filter — x11_trend_selection","text":"following procedure used X-11 select length trend filter: Computes /C ratio, \\(icr\\) Henderson filter length frequency plus 1. length depends value \\(icr\\): \\(icr < 1\\) selected length 9 monthly data 5 otherwise; \\(1 \\leq icr < 3.5\\) selected length \\(freq + 1\\) \\(freq\\) frequency data (12 monthly data, 4 quarterly data...). \\(icr \\geq 3.5\\) selected length 23 monthly data 7 otherwise. value \\(icr\\) fixed build Musgrave filters (find_icr()) : quarterly data, length 5 \\(icr = 0.001\\), otherwide \\(icr = 4.5\\); length less equal 9 \\(icr = 1\\); else length less equal 13 \\(icr = 3.5\\); else \\(icr = 4.5\\).","code":""},{"path":"https://aqlt.github.io/publishTC/reference/x13_regarima_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Outlier detection with RegARIMA Model — x13_regarima_outliers","title":"Outlier detection with RegARIMA Model — x13_regarima_outliers","text":"Wrapper around rjd3x13::regarima_outliers() detect Additive Outliers (AO) Level Shifts (LS) seasonnally adjusted series.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/x13_regarima_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outlier detection with RegARIMA Model — x13_regarima_outliers","text":"","code":"x13_regarima_outliers(   y,   order = c(0, 1, 1),   mean = FALSE,   ao = TRUE,   ls = TRUE )"},{"path":"https://aqlt.github.io/publishTC/reference/x13_regarima_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outlier detection with RegARIMA Model — x13_regarima_outliers","text":"y ts object. order Orders ARIMA model. mean Logical, TRUE model includes constant term. ao, ls Boolean indicate additive outliers (AO) level shifts (LS) detected.","code":""},{"path":"https://aqlt.github.io/publishTC/reference/x13_regarima_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outlier detection with RegARIMA Model — x13_regarima_outliers","text":"list two elements: ao ls, vectors time points respective outliers detected. outliers detected, corresponding element NULL.","code":""},{"path":"https://aqlt.github.io/publishTC/news/index.html","id":"publishtc-022","dir":"Changelog","previous_headings":"","what":"publishTC 0.2.2","title":"publishTC 0.2.2","text":"New function x13_regarima_outliers() detect AO LS seasonally adjusted series. New function smoothness() compute smoothness statistic. n_last_tc = NULL value defined according MCD statistic. ggconfint_plot() correction parameters xlim ylim used. New parameter sa_bar_line growthplot().","code":""},{"path":"https://aqlt.github.io/publishTC/news/index.html","id":"publishtc-021","dir":"Changelog","previous_headings":"","what":"publishTC 0.2.1","title":"publishTC 0.2.1","text":"Improvement ggplot2 plots.","code":""},{"path":"https://aqlt.github.io/publishTC/news/index.html","id":"publishtc-020","dir":"Changelog","previous_headings":"","what":"publishTC 0.2.0","title":"publishTC 0.2.0","text":"mcd() now returns default value number period (instead NULL) correction local parameterisation functions series contains NA. plots, default 4 last values trend-cycle dotted emphasize higher variability last values. New growthplot() function.","code":""}]
